{"version":3,"sources":["webpack:///./src/pages/quiz.tsx","webpack:///./src/components/Button.tsx"],"names":["QuizPage","Consumer","context","state","loading","page","className","data","category","difficulty","he","decode","question","buttonText","isTrueButton","buttonActions","hitTrue","hitFalse","calculateScore","updateScore","updateRight","updateWrong","navigate","Button","onClick"],"mappings":"2FAAA,yFAiEeA,UA3DE,WACb,OACI,kBAAC,IAAUC,SAAX,MACK,SAAAC,GAAO,OACJ,qCACOA,EAAQC,MAAMC,SAAWF,EAAQG,KAAO,GACvC,oCACI,wBAAIC,UAAU,iCAAiCJ,EAAQC,MAAMI,KAAKL,EAAQG,KAAO,GAAGG,UACpF,uBAAGF,UAAU,gBAAb,eAAyCJ,EAAQC,MAAMI,KAAKL,EAAQG,KAAO,GAAGI,YAC9E,uBAAGH,UAAU,gBAAgBI,IAAGC,OAAH,GAAaT,EAAQC,MAAMI,KAAKL,EAAQG,KAAO,GAAGO,WAC/E,uBAAGN,UAAU,2BAA2BJ,EAAQG,KAAhD,UACA,kBAAC,IAAD,CACIQ,WAAW,OACXC,cAAY,EACZC,cAAe,kBAAMb,EAAQc,aAEjC,kBAAC,IAAD,CACIH,WAAW,QACXE,cAAe,kBAAMb,EAAQe,eAGrC,KACc,KAAjBf,EAAQG,MACL,oCACI,wBAAIC,UAAU,iCAAiCJ,EAAQC,MAAMI,KAAKL,EAAQG,KAAO,GAAGG,UACpF,uBAAGF,UAAU,gBAAb,eAAyCJ,EAAQC,MAAMI,KAAKL,EAAQG,KAAO,GAAGI,YAC9E,uBAAGH,UAAU,gBAAgBI,IAAGC,OAAH,GAAaT,EAAQC,MAAMI,KAAKL,EAAQG,KAAO,GAAGO,WAC/E,uBAAGN,UAAU,2BAAb,YACA,kBAAC,IAAD,CACIO,WAAW,OACXC,cAAY,EACZC,cAAe,WACXb,EAAQc,UACRd,EAAQgB,iBACRhB,EAAQiB,cACRjB,EAAQkB,cACRlB,EAAQmB,cACRC,YAAS,gBAGjB,kBAAC,IAAD,CACIT,WAAW,QACXE,cAAe,WACXb,EAAQe,WACRf,EAAQgB,iBACRhB,EAAQiB,cACRjB,EAAQkB,cACRlB,EAAQmB,cACRC,YAAS,uB,kCCtD7C,yBAmBeC,IAXK,SAAC,GAA6D,IAA3DV,EAA2D,EAA3DA,WAAYE,EAA+C,EAA/CA,cAAeD,EAAgC,EAAhCA,aAC9C,OACE,4BACER,UAAWQ,EAAe,qNAAH,+MACvBU,QAAST,GAERF","file":"component---src-pages-quiz-tsx-335d4d28c9d977425427.js","sourcesContent":["import React from 'react';\nimport { navigate } from 'gatsby';\nimport MyContext from '../hooks/Provider';\nimport he from 'he';\nimport Button from '../components/Button';\n\nconst QuizPage = () => {\n    return (\n        <MyContext.Consumer>\n            {context => (\n                <>\n                    {(!context.state.loading && context.page < 10) ? (\n                        <>\n                            <h1 className=\"text-4xl text-indigo-500 mb-8\">{context.state.data[context.page - 1].category}</h1>\n                            <p className=\"text-red-500\">Difficulty: {context.state.data[context.page - 1].difficulty}</p>\n                            <p className=\"text-lg my-4\">{he.decode(`${context.state.data[context.page - 1].question}`)}</p>\n                            <p className=\"text-sm text-indigo-500\">{context.page} of 10</p>\n                            <Button\n                                buttonText=\"TRUE\"\n                                isTrueButton\n                                buttonActions={() => context.hitTrue()}\n                            />\n                            <Button\n                                buttonText=\"FALSE\"\n                                buttonActions={() => context.hitFalse()}\n                            />\n                        </>\n                    ) : null}\n                    {context.page === 10 && (\n                        <>\n                            <h1 className=\"text-4xl text-indigo-500 mb-8\">{context.state.data[context.page - 1].category}</h1>\n                            <p className=\"text-red-500\">Difficulty: {context.state.data[context.page - 1].difficulty}</p>\n                            <p className=\"text-lg my-4\">{he.decode(`${context.state.data[context.page - 1].question}`)}</p>\n                            <p className=\"text-sm text-indigo-500\">10 of 10</p>\n                            <Button\n                                buttonText=\"TRUE\"\n                                isTrueButton\n                                buttonActions={() => {\n                                    context.hitTrue();\n                                    context.calculateScore();\n                                    context.updateScore();\n                                    context.updateRight();\n                                    context.updateWrong();\n                                    navigate('/results/');\n                                }}\n                            />\n                            <Button\n                                buttonText=\"FALSE\"\n                                buttonActions={() => {\n                                    context.hitFalse();\n                                    context.calculateScore();\n                                    context.updateScore();\n                                    context.updateRight();\n                                    context.updateWrong();\n                                    navigate('/results/');\n                                }}\n                            />\n                        </>\n                    )}\n                </>\n            )}\n        </MyContext.Consumer>\n    );\n}\n\nexport default QuizPage;","import React from 'react';\n\ninterface ButtonProps extends HTMLButtonElement {\n  buttonText: string;\n  buttonActions: any;\n  isTrueButton?: boolean;\n}\n\nconst Button: any = ({ buttonText, buttonActions, isTrueButton }: ButtonProps) => {\n    return (\n      <button\n        className={isTrueButton ? `focus:outline-none cursor-pointer no-underline mt-4 mr-8 ml-8 py-3 px-6 border-2 border-green-300 rounded-full text-green-300 bg-white hover:text-white hover:bg-green-300 transition-all duration-300 ease-linear`: `focus:outline-none cursor-pointer no-underline mt-4 mr-8 ml-8 py-3 px-6 border-2 border-red-500 rounded-full text-red-500 bg-white hover:text-white hover:bg-red-500 transition-all duration-300 ease-linear`}\n        onClick={buttonActions}\n      >\n        {buttonText}\n      </button>\n    )\n}\n\nexport default Button;"],"sourceRoot":""}